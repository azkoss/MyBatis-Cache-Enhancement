package com.github.wanggit.mybatis.cache.enhancement.service.impl;

import com.github.wanggit.mybatis.cache.enhancement.dao.entity.Configuration;
import com.github.wanggit.mybatis.cache.enhancement.dao.entity.ConfigurationExample;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import com.github.wanggit.mybatis.cache.enhancement.dao.mapper.ConfigurationMapper;
import com.github.wanggit.mybatis.cache.enhancement.service.ConfigurationService;


@Service 
@Transactional(rollbackFor = Exception.class) 
public class ConfigurationServiceImpl implements ConfigurationService {

	@Autowired
	private ConfigurationMapper configurationMapper;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int countByExample(ConfigurationExample example){
		return configurationMapper.countByExample(example);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int deleteByExample(ConfigurationExample example){
		return configurationMapper.deleteByExample(example);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int deleteByPrimaryKey(Integer id){
		return configurationMapper.deleteByPrimaryKey(id);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int insert(Configuration record){
		return configurationMapper.insert(record);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int insertSelective(Configuration record){
		return configurationMapper.insertSelective(record);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public List<Configuration> selectByExample(ConfigurationExample example){
		return configurationMapper.selectByExample(example);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public Configuration selectByPrimaryKey(Integer id){
		return configurationMapper.selectByPrimaryKey(id);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int updateByExampleSelective(Configuration record,  ConfigurationExample example){
		return configurationMapper.updateByExampleSelective(record, example);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int updateByExample(Configuration record,  ConfigurationExample example){
		return configurationMapper.updateByExample(record, example);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int updateByPrimaryKeySelective(Configuration record){
		return configurationMapper.updateByPrimaryKeySelective(record);
	}

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_configuration
     *
     * @mbggenerated
     */
	public int updateByPrimaryKey(Configuration record){
		return configurationMapper.updateByPrimaryKey(record);
	}
}